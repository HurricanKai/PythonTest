trigger:
  branches:
    include:
      - "*"
  tags:
    include:
      - "*"

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python azure-set-version.py
  displayName: 'Set Azure Build Version'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python -m pip install flake8
    flake8 . > flake8.log
    python azure-analyse-flake8.py
  displayName: 'Run lint tests'

- script: |
    pip install pytest
    pip install pytest-cov
    pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
  displayName: 'Test with pytest'

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
  
- script: |
    pip install wheel
    pip install twine
  displayName: "Install Twine & Wheel"

- script: |
    python setup.py sdist bdist_wheel
    
- task: TwineAuthenticate@1
  displayName: 'Twine Authenticate'
  inputs:
    artifactFeed: PythonTest/TestPackage
- script: |
    python -m twine upload -r "TestPackage" --skip-existing --config-file $(PYPIRC_PATH) ./dist/*.whl --verbose
  displayName: Publish to Azure